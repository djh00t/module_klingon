name: Docker Build Pre-Checks

on:
  push:
    branches:
      - '*'
    paths:
      - 'openfaas/**'
      - '.github/workflows/openfaas-pre-docker-build-pr.yaml'
      - '.github/workflows/openfaas-docker-build.yaml'
  workflow_dispatch:
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
jobs:
  prepare-version-pr:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests setuptools

    - name: Calculate new release number
      id: versioning
      run: |
        # Import openfaas/build.py
        import sys
        import os
        sys.path.append(os.path.join(os.getcwd(), 'openfaas'))
        from openfaas.build import fetch_latest_tag, increment_version
        image_name = 'djh00t/klingon-serial'
        latest_tag = fetch_latest_tag(image_name)
        new_version = increment_version(latest_tag, 'patch')  # Assuming we're doing a patch release
        with open(os.getenv('GITHUB_ENV'), 'a') as f:
           f.write(f"new_version={new_version}\n")
      shell: python

    - name: Create or update PR with new release number
      run: |
        sudo snap install hub --classic
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git checkout -b "release-${{ env.new_version }}"
        git commit --allow-empty -m "Prepare for Docker build version ${{ env.new_version }}"
        export GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
        git push --set-upstream origin "release-${{ env.new_version }}"
        echo "## Changelog" > PR_BODY.md
        echo "<!-- markdown-changelog-generator -->" >> PR_BODY.md
        /snap/bin/hub pull-request -f -p -b main -F PR_BODY.md -l "pre-release" -o
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}


