name: Post-PR Merge CI

# Controls when the action will run. 
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  increment-version:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    outputs:
      source_branch: ${{ steps.extract_branch.outputs.source_branch }}
      new_version: ${{ steps.versioning.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
      - name: Login to GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth login --with-token < <(echo "${GITHUB_TOKEN}")
      - name: Increment version number
        id: versioning
        run: |
          file="VERSION"
          if [ ! -f "$file" ]; then
            echo "VERSION file does not exist. Creating with initial value 0.0.0."
            echo "0.0.0" > "$file"
          fi
          version=$(cat ${file})
          IFS='.' read -ra VER <<< "$version"
          ((VER[2]++))
          new_version="${VER[0]}.${VER[1]}.${VER[2]}"
          echo $new_version > $file
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"
      - name: Commit and push new version
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add VERSION
          git commit -m "Update version number - $new_version" || echo "No changes to commit"
          git checkout -b version-bump
          git push origin version-bump
          gh pr create --title "Update version number - $new_version" --body "This is an automated PR to update the version number to $new_version" --base main --head version-bump --reviewer <REVIEWER_USERNAME> --label "version-bump"

  post-pr-merge:
    runs-on: ubuntu-latest
    needs: increment-version
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
      - name: Login to GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth login --with-token < <(echo "${GITHUB_TOKEN}")
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make check-packages
      - name: Build and test
        run: |
          pip install .
          make sdist
          make wheel
          make test
      - name: Push to TestPyPI
        if: github.ref == 'refs/heads/main' # This ensures that PyPI upload only happens on main branch merges.  
        run: |
            make upload-test TEST_PYPI_USER_AGENT=${{ secrets.TEST_PYPI_USER_AGENT }}
            env:
              VERSION: ${{ needs.increment-version.outputs.new_version }}
      - name: Push to PyPI
        if: github.ref == 'refs/heads/main' # This ensures that PyPI upload only happens on main branch merges.
        run: |
          make upload PYPI_USER_AGENT=${{ secrets.PYPI_USER_AGENT }}
