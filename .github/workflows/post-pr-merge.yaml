name: Post-PR Merge CI

# Controls when the action will run. 
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  increment-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    outputs:
      source_branch: ${{ steps.extract_branch.outputs.source_branch }}
    steps:
      - uses: actions/checkout@v2
      - name: Extract source branch name
        id: extract_branch
        run: echo "::set-output name=source_branch::$(echo ${GITHUB_REF#refs/heads/})"
      - run: |
          file="VERSION"
          if [ ! -f "$file" ]; then
            echo "VERSION file does not exist. Creating with initial value 0.0.0."
            echo "0.0.0" > "$file"
          fi
          version=$(cat ${file})
          IFS='.' read -ra VER <<< "$version"
          ((VER[2]++))
          new_version="${VER[0]}.${VER[1]}.${VER[2]}"
          echo $new_version > $file
          echo "New version: $new_version"
      - run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add VERSION
          git commit -m "Update version number - $new_version" -a || echo "No changes to commit"
          git push
      - name: Push VERSION to the source branch
        run: |
          git fetch
          git checkout ${{ steps.extract_branch.outputs.source_branch }}
          git merge main --no-edit
          git push origin ${{ steps.extract_branch.outputs.source_branch }}

  post-pr-merge:
    runs-on: ubuntu-latest
    needs: increment-version
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    env:
      BRANCH: ${{ github.ref }}
      GITHUB_USERNAME: ${{ github.actor }}
      VERSION: ${{ needs.increment-version.outputs.new_version }}
    steps:
      - name: Push to TestPyPI
        uses: actions/checkout@v2
        run: |
            make upload-test TEST_PYPI_USER_AGENT=${{ secrets.TEST_PYPI_USER_AGENT }}
          env:
            VERSION: ${{ needs.increment-version.outputs.new_version }}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make check-packages
      - name: Build and test
        run: |
          pip install .
          make sdist
          make wheel
          make test
      - name: Push to PyPI
        run: |
          make upload PYPI_USER_AGENT=${{ secrets.PYPI_USER_AGENT }}
